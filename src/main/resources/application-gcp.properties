# =====================================================
# Business Essentials API - GCP Production Configuration
# =====================================================
# Profile: gcp (Google Cloud Platform)
# Environment: Production / Cloud Run
# =====================================================

# =====================================================
# APPLICATION CONFIGURATION
# =====================================================
spring.application.name=business-essentials-api
server.port=8080
server.servlet.context-path=/api

# Error handling (production settings - don't expose stack traces)
server.error.include-message=always
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# =====================================================
# GOOGLE CLOUD STORAGE CONFIGURATION
# =====================================================
# Enable GCS for production

# GCP Project ID (required)
# Can be overridden via environment variable: GCP_PROJECT_ID
gcs.project-id=${GCP_PROJECT_ID:}

# Bucket configuration
gcs.location=${GCS_LOCATION:asia-east1-a}
gcs.storage-class=${GCS_STORAGE_CLASS:STANDARD}

# Credentials
# Leave empty to use Application Default Credentials (recommended for Cloud Run)
# Or set to path of service account key JSON file
gcs.credentials-path=${GCS_CREDENTIALS_PATH:}

# Security settings
gcs.uniform-bucket-level-access=true
gcs.public-access-prevention=true

# Timeouts (milliseconds)
gcs.connect-timeout=60000
gcs.read-timeout=60000

# =====================================================
# ACTUATOR & MONITORING
# =====================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=when-authorized
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# =====================================================
# LOGGING CONFIGURATION
# =====================================================
# Use JSON logging for Cloud Logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.level.root=INFO
logging.level.com.tsu.api=INFO
logging.level.com.google.cloud=WARN
logging.level.io.grpc=WARN

# GCS-specific logging (set to DEBUG for troubleshooting)
logging.level.com.tsu.api.service.impl.GoogleCloudStorageBucketProvider=INFO

# =====================================================
# API DOCUMENTATION (Disabled in production)
# =====================================================
springdoc.api-docs.enabled=false
springdoc.swagger-ui.enabled=false

# =====================================================
# SECURITY NOTES
# =====================================================
# IMPORTANT: Sensitive values should be set via environment variables or Secret Manager:
# - GCP_PROJECT_ID: Your GCP project ID
# - Database credentials: Via Secret Manager
# - OAuth2 secrets: Via Secret Manager
# - API keys: Via Secret Manager
#
# Example Cloud Run deployment with secrets:
# gcloud run services update bxspace-api \
#   --set-env-vars GCP_PROJECT_ID=your-project-id \
#   --update-secrets DATABASE_PASSWORD=db-password:latest \
#   --update-secrets OAUTH2_CLIENT_SECRET=oauth-secret:latest
