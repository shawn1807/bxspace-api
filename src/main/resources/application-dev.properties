
# =====================================================
# Business Essentials API - Development Configuration
# =====================================================
# Profile: development
# Environment: Local Development / Test Environment
# Last Updated: 2025-01-15
# =====================================================

# =====================================================
# APPLICATION CONFIGURATION
# =====================================================
spring.application.name=business-essentials-api
server.port=8080
server.servlet.context-path=/api

# Error handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=false

# =====================================================
# API DOCUMENTATION (OpenAPI/Swagger)
# =====================================================
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true
springdoc.show-actuator=true
springdoc.api-docs.groups.enabled=true

# API Info
springdoc.info.title=Business Essentials API
springdoc.info.description=REST API for Business Essentials Application Suite
springdoc.info.version=1.0.0
springdoc.info.contact.name=Development Team
springdoc.info.contact.email=dev@businessessentials.com

# =====================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =====================================================
# Primary Database Connection
spring.datasource.url=jdbc:postgresql://192.168.1.111:5432/bxhive
spring.datasource.username=bx_user
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Settings (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=60000

# Alternative local database (uncomment for local development)
#spring.datasource.url=jdbc:postgresql://localhost:5432/devbe

# =====================================================
# JPA/HIBERNATE CONFIGURATION
# =====================================================
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Query logging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# =====================================================
# SECURITY CONFIGURATION
# =====================================================

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:4200,http://127.0.0.1:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# OAuth2 Resource Server (Keycloak JWT)
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev.dumbmind.com/auth/realms/DEV
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev.dumbmind.com/auth/realms/DEV/protocol/openid-connect/certs

# =====================================================
# KEYCLOAK INTEGRATION
# =====================================================
keycloak.realm=DEV
keycloak.url=https://dev.dumbmind.com/auth
keycloak.token-endpoint=https://dev.dumbmind.com/auth/realms/DEV/protocol/openid-connect/token
keycloak.userinfo-endpoint=https://dev.dumbmind.com/auth/realms/DEV/protocol/openid-connect/userinfo
keycloak.client-id=admin-client
keycloak.secret=KBDBGsVg94xXhBgmvzJlHLmp4Hh16KNi

# Admin Service Account
keycloak.username=useradmin
keycloak.password=FhyyYuB2OU]v#goT8Zs9(Kqfz6P,dvqu

# =====================================================
# SOCIAL LOGIN PROVIDERS
# =====================================================

# Google OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=YOUR_GOOGLE_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=YOUR_GOOGLE_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Facebook OAuth2 Configuration
spring.security.oauth2.client.registration.facebook.client-id=YOUR_FACEBOOK_APP_ID
spring.security.oauth2.client.registration.facebook.client-secret=YOUR_FACEBOOK_APP_SECRET
spring.security.oauth2.client.registration.facebook.scope=public_profile,email
spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email
spring.security.oauth2.client.provider.facebook.user-name-attribute=id

# =====================================================
# JWT CONFIGURATION
# =====================================================
jwt.secret=dev-secret-key-for-jwt-signing-change-in-production-environment
jwt.issuer=business-essentials-api
jwt.access-token-expiry=3600
jwt.refresh-token-expiry=86400
jwt.algorithm=HS256

# =====================================================
# EXTERNAL SERVICE INTEGRATIONS
# =====================================================

# IP Geolocation Services
ipgeolocation.api-key=3308941afc57465c9d28814d5b8e19cf
ipgeolocation.base-url=https://api.ipgeolocation.io
ipgeolocation.timeout=5000

ipinfo.api-key=56f9064dc87a3c
ipinfo.base-url=https://ipinfo.io
ipinfo.timeout=5000

# =====================================================
# ACTUATOR & MONITORING
# =====================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true
management.metrics.export.prometheus.enabled=true

# Health Check Configuration
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.ping.enabled=true

# =====================================================
# LOGGING CONFIGURATION
# =====================================================
logging.level.com.tsu.api=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.transaction=DEBUG

# File logging
logging.file.name=logs/be-api-dev.log
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.total-size-cap=100MB
logging.logback.rollingpolicy.max-history=7

# =====================================================
# CACHING CONFIGURATION
# =====================================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=600s

# =====================================================
# INTERNATIONALIZATION
# =====================================================
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.fallback-to-system-locale=false

# =====================================================
# DEVELOPMENT TOOLS
# =====================================================
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.h2.console.enabled=false

# =====================================================
# VALIDATION & ERROR HANDLING
# =====================================================
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

